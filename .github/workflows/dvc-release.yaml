permissions: write-all
name: DVC Pipeline and Release
on:
  push:
    tags:
      - 'v*'
jobs:
  dvc-pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 设置Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Prepare test environment
        run: |
          echo "Setting up test environment for DVC..."
          python scripts/create_test_data.py
          
          # Create symlink for raw_data.tsv that DVC expects
          mkdir -p data/raw
          if [ -f data/raw/train_test.tsv ]; then
            ln -sf train_test.tsv data/raw/raw_data.tsv
          fi
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Initialize DVC
        run: dvc init --no-scm --force
      - name: Configure DVC Remote Storage
        run: |
          dvc remote add -d storage s3://remla25-team8/dvcstore
      - name: Pull DVC Data
        run: |
          # First, try normal pull
          if ! dvc pull; then
            echo "DVC pull failed, attempting to fix missing files..."
            
            # If specific files are missing from cache, try to repro first
            dvc status
            
            # Try to reproduce missing stages
            dvc repro --force
            
            # Push any newly generated files
            dvc push
          fi
      - name: Run DVC Pipeline
        run: |
          # Set PYTHONPATH for DVC pipeline
          export PYTHONPATH="$PYTHONPATH:$(pwd)/src"
          dvc repro
      - name: Push DVC Data to S3
        run: dvc push
      - name: Package Model
        run: python src/package_model.py
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: model_release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_Token }}